name: 'Bicep Whatif / Deploy'

on:
  push:
    branches:
    - main
    paths:
    - 'IaC/bicep/rg-spoke/spoke**'
    - '.github/workflows/bicep-spoke.yml'
    
  pull_request:
    branches:
    - main
    paths:
    - 'IaC/bicep/rg-spoke/spoke**'
    - '.github/workflows/bicep-spoke.yml'

  workflow_dispatch:

env:
  HUB_DEPLOYMENT_NAME: aks-hub

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  fetch_hub_params:
    name: 'Fetch Hub Parameters'
    runs-on: ubuntu-latest
    environment: production
    outputs: 
      hubFwResourceId: ${{ steps.params.outputs.hubFwResourceId }}
      hubLaWorkspaceResourceId: ${{ steps.params.outputs.hubLaWorkspaceResourceId }}
      hubVnetId: ${{ steps.params.outputs.hubFwResohubVnetIdurceId }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: debug
        run: |
          pwd
          ls -lha
          echo "test=value" >> $GITHUB_OUTPUT
          env | grep GITHUB
          
      - name: 'Fetch deployment'
        id: params
        uses: tjcorr/cli@main
        with:
          inlineScript: |
            DEPLOYMENT_OUTPUTS=$(az deployment sub show \
              --query properties.outputs \
              -n $HUB_DEPLOYMENT_NAME)
            
            pwd
            ls -lha
            env | grep GITHUB
            echo 'convert deployment outputs to outputs'
            echo "setting output test=values"
            echo "summary=value" >> $GITHUB_OUTPUT
            echo  "::set-output name=test::value"
            echo $DEPLOYMENT_OUTPUTS | jq -c '. | to_entries[] | [.key, .value.value]' |
              while IFS=$"\n" read -r c; do
                OUTPUT_NAME=$(echo "$c" | jq -r '.[0]')
                OUTPUT_VALUE=$(echo "$c" | jq -r '.[1]')
                echo "setting output $OUTPUT_NAME=$OUTPUT_VALUE"
                echo "::set-output name=$OUTPUT_NAME::$OUTPUT_VALUE"
              done

  deploy_hub:
    name: 'Bicep - Deploy Spoke'
    needs: [fetch_hub_params]
    uses: tjcorr/aks-baseline-automation/.github/workflows/bicep-reusable.yml@main
    with:
      location: "eastus"
      bicep_template: "IaC/bicep/rg-spoke/spoke.bicep"
      bicep_parameters: |
         IaC/bicep/rg-spoke/spoke.parameters.json \ 
         hubVnetResourceId=${{needs.fetch_hub_params.outputs.hubVnetResourceId}} \ 
         hubLaWorkspaceResourceId=${{needs.fetch_hub_params.outputs.hubLaWorkspaceResourceId}} \
         hubFwResourceId=${{needs.fetch_hub_params.outputs.hubFwResourceId}}
      deployment_name: "aks-hub"
    secrets: inherit
    
 
