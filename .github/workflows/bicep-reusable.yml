name: 'Bicep Whatif / Deploy'

on:
  workflow_call:
    inputs: 
      location: 
        required: true
        type: string
        default: eastus
      bicep_template:
        required: true
        type: string
      bicep_parameters:
        required: true
        type: string
      deployment_name:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
        
#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write
  
jobs:
  bicep-whatif:
    name: 'Bicep Whatif'
    runs-on: ubuntu-latest
    environment: production

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Authenticate to Az CLI using OIDC
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
     # Checks that all Bicep configuration files adhere to a canonical format
    - name: Bicep Lint
      uses: tjcorr/cli@main
      with:
        inlineScript: az bicep build --file ${{inputs.bicep_template}}
        
    # Validate whether a template is valid at subscription scope
    - name: Bicep Validate
      uses: tjcorr/cli@main
      with:
        inlineScript: |
          az deployment sub validate \
            --location ${{inputs.location}} \
            --name ${{inputs.deployment_name}} \
            --template-file ${{inputs.bicep_template}} \
            --parameters ${{inputs.bicep_parameters}} 
            
    # Preview changes
    - name: "What-If"
      uses: tjcorr/cli@main
      with:
        inlineScript: |
          az deployment sub what-if \
            --location ${{inputs.location}} \
            --name ${{inputs.deployment_name}} \
            --template-file ${{inputs.bicep_template}} \
            --parameters ${{inputs.bicep_parameters}} > whatif
            
      # Create string output of Whatif
    - name: Create String Output
      id: whatif-string
      run: |
        WHATIF=$(cat whatif)
        echo "## Whatif Output" >> whatif.string
        echo "<details><summary>Click to expand</summary>" >> whatif.string
        echo "" >> whatif.string
        echo '```' >> whatif.string
        echo "$WHATIF" >> whatif.string
        echo '```' >> whatif.string
        echo "</details>" >> whatif.string
        
        SUMMARY=$(cat whatif.string)
        SUMMARY="${SUMMARY//'%'/'%25'}"
        SUMMARY="${SUMMARY//$'\n'/'%0A'}"
        SUMMARY="${SUMMARY//$'\r'/'%0D'}"
        
        echo "summary=$SUMMARY" >> $GITHUB_OUTPUT

    # Publish Terraform Plan as task summary
    - name: Publish Whatif to Task Summary
      run: |
        cat whatif.string >> $GITHUB_STEP_SUMMARY
      
    # If this is a PR post the changes
    - name: Push Whatif Output to PR
      if: github.ref != 'refs/heads/main'
      uses: actions/github-script@v2
      env:
        SUMMARY: "${{ steps.whatif-string.outputs.summary }}"
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
            })
            
  bicep-deploy:
    name: 'Bicep Deploy'
    #TODO can we easily determine if there are any changes to deploy?
    if: github.ref == 'refs/heads/main' 
    runs-on: ubuntu-latest
    environment: production-approval
    needs: [bicep-whatif]
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Authenticate to Az CLI using OIDC
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    # Deploy
    - name: "Bicep Deployment"
      uses: tjcorr/cli@main
      with:
        inlineScript: |
          az deployment sub create \
            --location ${{inputs.location}} \
            --name ${{inputs.deployment_name}} \
            --template-file ${{inputs.bicep_template}} \
            --parameters ${{inputs.bicep_parameters}} 
            
