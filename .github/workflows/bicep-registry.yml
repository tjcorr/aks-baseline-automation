name: 'Bicep - ACR'

on:
  push:
    branches:
    - main
    paths:
    - 'IaC/bicep/rg-spoke/acr**'
    - '.github/workflows/bicep-registry.yml'
    
  pull_request:
    branches:
    - main
    paths:
    - 'IaC/bicep/rg-spoke/acr**'
    - '.github/workflows/bicep-registry.yml'

  workflow_dispatch:

env:
  HUB_DEPLOYMENT_NAME: aks-hub
  SPOKE_DEPLOYMENT_NAME: aks-spoke 
  ACR_DEPLOYMENT_NAME: aks-acr
  AZURE_CLIENT_ID: e3756d7d-f8be-4bdf-9335-1747a7d2dd91
  AZURE_TENANT_ID: 72f988bf-86f1-41af-91ab-2d7cd011db47
  AZURE_SUBSCRIPTION_ID: 909cb1f4-a3f2-4db6-8482-23ceb7e81eb0

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  fetch_hub_params:
    name: 'Fetch Hub Parameters'
    runs-on: ubuntu-latest
    environment: production
    outputs: 
      clusterVnetResourceId: ${{ steps.params.outputs.clusterVnetResourceId }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          
      - name: 'Fetch deployment'
        id: params
        uses: tjcorr/cli@tjcorr-87
        with:
          inlineScript: |
            DEPLOYMENT_OUTPUTS=$(az deployment sub show \
              --query properties.outputs \
              -n $SPOKE_DEPLOYMENT_NAME)
            
            echo 'convert deployment outputs to outputs'
            echo $DEPLOYMENT_OUTPUTS | jq -c '. | to_entries[] | [.key, .value.value]' |
              while IFS=$"\n" read -r c; do
                OUTPUT_NAME=$(echo "$c" | jq -r '.[0]')
                OUTPUT_VALUE=$(echo "$c" | jq -rc '.[1]')
                echo "setting output $OUTPUT_NAME=$OUTPUT_VALUE"
                echo "$OUTPUT_NAME=$OUTPUT_VALUE" >> $GITHUB_OUTPUT
              done

  deploy_hub:
    name: 'Bicep - Deploy ACR'
    needs: [fetch_hub_params]
    uses: tjcorr/aks-baseline-automation/.github/workflows/bicep-reusable.yml@main
    with:
      location: "eastus"
      bicep_template: "IaC/bicep/rg-spoke/acr.bicep"
      bicep_parameters: |
         IaC/bicep/rg-spoke/acr.parameters.json \
         targetVnetResourceId=${{needs.fetch_hub_params.outputs.clusterVnetResourceId}} \
      deployment_name: aks-acr
    secrets: inherit
    
 
